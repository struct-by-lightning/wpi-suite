/*******************************************************************************
 * Copyright (c) 2012-2014 -- WPI Suite
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * Contributor: team struct-by-lightning
 *******************************************************************************/
package edu.wpi.cs.wpisuitetng.modules.PlanningPoker.views;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import edu.wpi.cs.wpisuitetng.janeway.config.ConfigManager;
import edu.wpi.cs.wpisuitetng.modules.PlanningPoker.controller.GetPlanningPokerUserController;
import edu.wpi.cs.wpisuitetng.modules.PlanningPoker.controller.UpdatePlanningPokerUserController;
import edu.wpi.cs.wpisuitetng.modules.PlanningPoker.models.PlanningPokerUser;
import edu.wpi.cs.wpisuitetng.modules.PlanningPoker.models.PlanningPokerUserModel;

/**
 * @author sfmailand
 * 
 */
public class PreferencesView extends JPanel {

	PlanningPokerUser currentUser;

	public static void openNewTab() {
		final PreferencesView view = new PreferencesView();
		MainView.getInstance().addCloseableTab("Preferences", view);
	}

	/**
	 * Creates new form PreferencesWindow
	 */
	public PreferencesView() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		textPanel = new javax.swing.JPanel();
		emailPanel = new javax.swing.JPanel();
		emailField = new javax.swing.JTextField();
		googleChatPanel = new javax.swing.JPanel();
		googleChatField = new javax.swing.JTextField();
		notificationPanel = new javax.swing.JPanel();
		sendEmail = new javax.swing.JCheckBox();
		sendGoogleChat = new javax.swing.JCheckBox();
		updateUser = new javax.swing.JButton();
		errorMessage = new javax.swing.JLabel();
		infoLabel = new JLabel();
		errorMessage.setForeground(Color.RED);
		googleChatInfo = new JLabel();
		infoText = new JLabel();
		updateUser.setEnabled(false);

		fillAllFields();

		sendEmail.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				sendEmailActionPerformed(evt);
			}
		});

		sendGoogleChat.setActionCommand("");
		sendGoogleChat.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				sendGoogleChatActionPerformed(evt);
			}
		});

		emailField.addKeyListener(new KeyAdapter() {
			public void keyReleased(KeyEvent evt) {
				emailFieldKeyTyped(evt);
			}
		});

		googleChatField.addKeyListener(new KeyAdapter() {
			public void keyReleased(KeyEvent evt) {
				googleChatFieldKeyTyped(evt);
			}
		});

		updateUser.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent evt) {
				updateUserPressed(evt);
			}
		});



		emailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
				javax.swing.BorderFactory.createLineBorder(new java.awt.Color(
						0, 0, 0)), "Email",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Tahoma", 0, 16))); // NOI18N

		emailField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

		javax.swing.GroupLayout emailPanelLayout = new javax.swing.GroupLayout(
				emailPanel);
		emailPanel.setLayout(emailPanelLayout);
		emailPanelLayout
				.setHorizontalGroup(emailPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								emailPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												emailField,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												264,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(sendEmail)
										.addContainerGap(12, Short.MAX_VALUE)));
		emailPanelLayout
				.setVerticalGroup(emailPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								emailPanelLayout
										.createSequentialGroup()
										.addGroup(
												emailPanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																emailField)
														.addComponent(
																sendEmail,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addGap(0, 6, Short.MAX_VALUE)));

		googleChatPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(
				javax.swing.BorderFactory.createLineBorder(new java.awt.Color(
						0, 0, 0)), "Google Chat",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Tahoma", 0, 16))); // NOI18N

		googleChatField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

		sendGoogleChat.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				sendGoogleChatActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout googleChatPanelLayout = new javax.swing.GroupLayout(
				googleChatPanel);
		googleChatPanel.setLayout(googleChatPanelLayout);
		googleChatPanelLayout
				.setHorizontalGroup(googleChatPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								googleChatPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												googleChatField,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												264,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(sendGoogleChat)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));
		googleChatPanelLayout
				.setVerticalGroup(googleChatPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								googleChatPanelLayout
										.createSequentialGroup()
										.addGroup(
												googleChatPanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																googleChatField)
														.addComponent(
																sendGoogleChat,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addGap(0, 6, Short.MAX_VALUE)));

		updateUser.setText("Update");

		infoText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		infoText.setText("<html>Please check which method <br>you'd like to use to recieve notifications.");

		googleChatInfo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
		googleChatInfo
				.setText("<html>Add <u><i>struct.by.lightning@gmail.com</i></u><br> to you  contacts in order to receive <br> notifications through Google chat");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				false)
																				.addComponent(
																						infoText)
																				.addComponent(
																						emailPanel,
																						javax.swing.GroupLayout.Alignment.LEADING,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						googleChatPanel,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		googleChatInfo,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		262,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		errorMessage,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		226,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		updateUser)))
								.addContainerGap(361, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(infoText,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										47,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(emailPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(4, 4, 4)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(
														googleChatPanel,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														googleChatInfo,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(13, 13, 13)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														errorMessage,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														63,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(updateUser))
								.addContainerGap(426, Short.MAX_VALUE)));
	}// </editor-fold>

	/**
	 * Description
	 * 
	 * @param evt
	 */
	protected void emailFieldKeyTyped(KeyEvent evt) {
		checkAllFields();
	}

	protected void smsFieldKeyTyped(KeyEvent evt) {
		checkAllFields();
	}

	protected void googleChatFieldKeyTyped(KeyEvent evt) {
		checkAllFields();
	}

	private void sendEmailActionPerformed(ActionEvent evt) {
		checkAllFields();
	}

	private void sendGoogleChatActionPerformed(ActionEvent evt) {
		checkAllFields();
	}

	private void updateUserPressed(ActionEvent evt) {

		currentUser.setEmail(emailField.getText());

		final String googleChatText = googleChatField.getText();

		currentUser.setInstantMessage(googleChatText);

		currentUser.setSendAim(sendGoogleChat.isSelected());
		currentUser.setSendEmail(sendEmail.isSelected());
		UpdatePlanningPokerUserController.getInstance().update(currentUser);
		updateUser.setText("Saved!");
		updateUser.setEnabled(false);
		MainView.getInstance().refreshGameTree();
		MainView.getInstance().removeClosableTab();
	}

	private void checkAllFields() {

		
		updateUser.setEnabled(true);
		boolean emailEntered = isValidEmail()
				|| emailField.getText().length() == 0;
		boolean googleChatEntered = isValidGoogleAccount()
				|| googleChatField.getText().length() == 0;

		boolean chatChecked = true;
		boolean emailChecked = true;

		if (sendEmail.isSelected() && emailField.getText().length() == 0) {
			emailChecked = false;
			errorMessage
					.setText("<html>You've selected to recieve <br> email notifications, but no email <br>was entered");
		}

		if (sendGoogleChat.isSelected()
				&& googleChatField.getText().length() == 0) {
			chatChecked = false;
			errorMessage
					.setText("<html>You've selected to recieve <br> Google Chat notifications,<br> but no account was entered");
		}

		final boolean canUpdate = emailEntered && googleChatEntered
				&& emailChecked && chatChecked;

		if (!emailEntered) {
			errorMessage.setText("<html>Not a valid email address");
		}

		else if (!googleChatEntered) {
			errorMessage.setText("<html>Not a valid Google Account");
		}

		else if (canUpdate) {
			errorMessage.setText("");
		}

		updateUser.setEnabled(canUpdate);

	}

	private boolean isValidEmail() {
		final String emailText = emailField.getText();
		final Pattern VALID_EMAIL_ADDRESS_REGEX = Pattern
				.compile(
						"^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$",
						Pattern.CASE_INSENSITIVE);
		final Matcher matcher = VALID_EMAIL_ADDRESS_REGEX.matcher(emailText);

		return matcher.find();
	}

	private boolean isValidGoogleAccount() {
		final String googleChatText = googleChatField.getText();
		final Pattern VALID_GOOGLE_ADDRESS_REGEX = Pattern.compile(
				"^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@gmail.com$",
				Pattern.CASE_INSENSITIVE);
		final Matcher matcher = VALID_GOOGLE_ADDRESS_REGEX
				.matcher(googleChatText);

		return matcher.find();
	}

	private void fillAllFields() {
		GetPlanningPokerUserController.getInstance().retrieveUser();
		try {
			Thread.sleep(150);
		} catch (Exception e) {
		}

		currentUser = PlanningPokerUserModel.getInstance().getUser(
				ConfigManager.getConfig().getUserName());

		if (currentUser.getEmail() != null) {
			emailField.setText(currentUser.getEmail());
		}
		if (currentUser.getInstantMessage() != null) {
			googleChatField.setText(currentUser.getInstantMessage());
		}

		sendEmail.setSelected(currentUser.canSendEmail());
		sendGoogleChat.setSelected(currentUser.canSendAim());

	}

	// Variables declaration - do not modify
	private JLabel infoLabel;
	private javax.swing.JTextField googleChatField;
	private javax.swing.JPanel googleChatPanel;
	private javax.swing.JTextField emailField;
	private javax.swing.JPanel emailPanel;
	private javax.swing.JLabel errorMessage;
	private javax.swing.JPanel notificationPanel;
	private javax.swing.JCheckBox sendGoogleChat;
	private javax.swing.JCheckBox sendEmail;
	private javax.swing.JPanel textPanel;
	private javax.swing.JButton updateUser;
	private javax.swing.JLabel googleChatInfo;
	private javax.swing.JLabel infoText;
	// End of variables declaration

}
